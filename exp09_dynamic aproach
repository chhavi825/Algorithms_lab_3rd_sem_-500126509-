#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

void knapsack(int W, int wt[], int val[], int n) {
    int B[n+1][W+1];

    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0)
                B[i][w] = 0;
            else if (wt[i-1] <= w)
                B[i][w] = max(val[i-1] + B[i-1][w - wt[i-1]], B[i-1][w]);
            else
                B[i][w] = B[i-1][w];
        }
    }

    printf("Maximum Profit: %d\n", B[n][W]);
}

int main() {
    int W = 50;
    int wt[] = {10, 20, 30, 40};
    int val[] = {50, 150, 140, 200};
    int n = 4;

    knapsack(W, wt, val, n);

    return 0;
}
