#include <stdio.h>

int max(int a, int b) {
    return (a > b) ? a : b;
}

void knapsack(int W, int wt[], int val[], int n) {
    int i, w;
    int B[n+1][W+1];

    for (w = 0; w <= W; w++) {
        B[0][w] = 0;
    }
    for (i = 0; i <= n; i++) {
        B[i][0] = 0;
    }

    for (i = 1; i <= n; i++) {
        for (w = 1; w <= W; w++) {
            if (wt[i-1] <= w) {
                B[i][w] = max(val[i-1] + B[i-1][w - wt[i-1]], B[i-1][w]);
            } else {
                B[i][w] = B[i-1][w];
            }
        }
    }

    printf("Maximum Value: %d\n", B[n][W]);
    printf("Selected items are: \n");
    w = W;
    for (i = n; i > 0 && w > 0; i--) {
        if (B[i][w] != B[i-1][w]) {
            printf("Item %d (Weight: %d, Value: %d)\n", i, wt[i-1], val[i-1]);
            w -= wt[i-1];
        }
    }
}

int main() {
    int n;

    printf("Enter the number of items: ");
    scanf("%d", &n);

    int wt[n];
    printf("Enter the weights: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &wt[i]);
    }

    int val[n];
    printf("Enter the values: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &val[i]);
    }

    int W;
    printf("Enter the total capacity of the knapsack: ");
    scanf("%d", &W);

    knapsack(W, wt, val, n);

    return 0;
}
