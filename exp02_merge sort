#include <stdio.h>
#include <stdlib.h>

void insertionSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;

        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

void mergeSort(int arr1[], int arr2[], int n1, int n2, int merge[]) {
    int a = 0, b = 0, c = 0;

    while (a < n1 && b < n2) {
        if (arr1[a] <= arr2[b]) {
            merge[c++] = arr1[a++];
        } else {
            merge[c++] = arr2[b++];
        }
    }

    while (a < n1) {
        merge[c++] = arr1[a++];
    }

    while (b < n2) {
        merge[c++] = arr2[b++];
    }
}

int main() {
    int arr1[] = {4, 2, 1, 3, 5};
    int arr2[] = {8, 6, 10, 9, 7};

    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int n2 = sizeof(arr2) / sizeof(arr2[0]);

    insertionSort(arr1, n1);
    insertionSort(arr2, n2);

    int merge[n1 + n2];
    mergeSort(arr1, arr2, n1, n2, merge);

    printf("Merged array is: ");
    for (int i = 0; i < n1 + n2; i++) {
        printf("%d ", merge[i]);
    }
    printf("\n");

    return 0;
}
